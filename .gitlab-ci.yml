stages:
- prebuild
- build_and_deploy
- platform-gate-simulator
- afterbuild

variables:
  GL_RUNNER: k8s-devint
  CI_PROJECT_NAME: $COMPONENT
  DEPLOY_ENVIRONMENT:
    value: "dev"
    options:
    - "dev"
    - "int"
    - "qlf"
    - "crt"
    - "ppd"
    - "prd"
    description: "The deployment target. Set to 'dev' by default."
  COMPONENT:
    value: "NONE"
    options:
    - "NONE"
    - "gate"
    - "platform-gate-simulator"
    description: "The component target. Set to 'none' by default."
  LABEL:
    value: "NONE"
    options:
    - "NONE"
    - "bo"
    - "sy"
    - "ttf"
    - "massive"
    - "acme"
    - "roger"
    description: "The label of component. Set to 'NONE' for default gate."
  REBUILD_COMPONENT_IMAGE:
    value: "true"
    options:
    - "true"
    - "false"
    description: "Allow to rebuild or no the component Image. Set to 'true' by default."

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "api" || $CI_PIPELINE_SOURCE == "web"
      when: always
    - if: $CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_REF_NAME !~ "develop"
      when: never

default:
  tags:
  - $GL_RUNNER

include:
- local: "gate/gate.yml"
  inputs:
    job-prefix: $DEPLOY_ENVIRONMENT
  rules:
  - if: $COMPONENT == "gate"
- local: "platform-gate-simulator/platform.yml"
  inputs:
    job-prefix: $DEPLOY_ENVIRONMENT
    job-stage: platform-gate-simulator
  rules:
  - if: $COMPONENT == "platform-gate-simulator"

prepare_env:
  stage: prebuild
  script:
  - echo $CI_PROJECT_PATH
  - export ROOT_PROJECT=$(echo "$CI_PROJECT_PATH" | cut -d'/' -f3)
  - echo $ROOT_PROJECT
  - echo "ROOT_PROJECT=$ROOT_PROJECT" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  when: always
