server:
  port: 8080
spring:
  rabbitmq:
    password: {{ spring.rabbitmq.password }}
    username: {{ spring.rabbitmq.username }}
    virtual-host: {{ spring.rabbitmq.virtual_host }}
    host: {{ spring.rabbitmq.host }}
    port: 5672
    # ssl:
    #   enabled: true
    listener:
      default-requeue-rejected: false
      simple:
        default-requeue-rejected: false
        retry:
          enabled: true
          initial-interval: 2s
          max-attempts: 6
          max-interval: 10s
          multiplier: 2
        concurrency: 10
    queues:
      eftiKeySendMessage: EFTI
      eftiSendMessageExchange: efti.send-message.exchange
      eftiReceiveMessageExchange: efti.receive-message.exchange
      eftiSendMessageQueue: efti.send-messages.q
      eftiReceiveMessageQueue: efti.receive-messages.q
      messageSendDeadLetterQueue: message-send-dead-letter-queue
      messageReceiveDeadLetterQueue: message-receive-dead-letter-queue
  application:
    name: {{ spring.application.name }}
  datasource:
    control:
      jdbc-url: {{ spring.datasource.url }}
      url: {{ spring.datasource.url }}
      username: {{ spring.datasource.username }}
      password: {{ spring.datasource.password }}
      driverClassName: org.postgresql.Driver
      liquibase:
        default-schema: {{ spring.jpa.properties.hibernate.control_schema }}
        change-log: classpath:db.changelog/db.gate.changelog-master.xml
    identifiers:
      jdbc-url: {{ spring.datasource.url }}
      url: {{ spring.datasource.url }}
      username: {{ spring.datasource.username }}
      password: {{ spring.datasource.password }}
      driverClassName: org.postgresql.Driver
      liquibase:
        default-schema: {{ spring.jpa.properties.hibernate.identifiers_schema }}
        change-log: classpath:db.changelog/db.identifiers.changelog-master.xml
  jackson:
    default-property-inclusion: NON_NULL
  security:
    oauth2:
      resourceserver:
        issuers: {{ spring.security.oauth2.resourceserver.issuers}}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        control_schema: "{{ spring.jpa.properties.hibernate.control_schema }}"
        identifiers_schema: "{{ spring.jpa.properties.hibernate.identifiers_schema }}"
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB

management:
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
      probes:
        enabled: true
    metrics:
      enabled: true
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: info,health,metrics

gate:
  country: {{ gate.country }}
  owner: {{ gate.owner }}
  ap:
    url: {{ gate.ap.url }}
    username: {{ gate.ap.username }}
    password: {{ gate.ap.password }}
  xsd:
    path: {{ gate.xsd.path }}

batch:
  update:
    cron: "0 */1 * ? * *"
  retry:
    cron: "*/20 * * * * *"
    time: 20, 120, 300
    size: 10
  identifier:
    cron: {{ batch.identifier.cron }}
    activated: {{ batch.identifier.activated }}
    deactivation-delay:
      three: {{ batch.identifier.deactivation_delay.three }}
      other: {{ batch.identifier.deactivation_delay.other }}
      null-delivery-date: {{ batch.identifier.deactivation_delay.null_delivery_date }}

springdoc:
  swagger-ui:
    enabled: {{ springdoc.swagger_ui.enabled }}
  api-docs:
    enabled: {{ springdoc.api_docs.enabled }}

proconnect:
  allowed:
    sirets: 12000018700027, 12002301500031, 15700001900461
